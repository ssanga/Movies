@page "/comboboxradzenexample"
@using Blazored.Toast.Configuration
@inject IMoviesDataService _moviesDataService

<div class="container" style="margin-top:1%;">
    <div class="row">
        <h4>This is an example of Radzen Combobox for Blazor</h4>
        <a class="ml-2" target="_blank" href="https://blazor.radzen.com/dropdown">Documentation here</a>
    </div>

    @if (movies == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-xl-6">
                <h3>DropDown</h3>

                <RadzenDropDown AllowClear="true" TValue="string"
                                Data=@(movies.Select(c => new { MovieId = c.Id.ToString(), MovieName = c.Name }).Distinct())
                                TextProperty="MovieName" ValueProperty="MovieId" Change=@(args => OnChange(args, "DropDown")) />
                <h3 style="margin-top: 2rem">DropDown with custom filter operator</h3>
                <RadzenDropDown AllowClear="true" TValue="string"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                                Data=@(movies.Select(c => new { MovieId = c.Id.ToString(), MovieName = c.Name }).Distinct())
                                TextProperty="MovieName" ValueProperty="MovieId" Change=@(args => OnChange(args, "DropDown with custom filter operator")) />
                

                <div class="row">
                    <div class="col-xl-6">
                        <RadzenTextBox @bind-Value="@searchString">Enter text here</RadzenTextBox>
                        <RadzenButton Click="@Search" Text="Search Movie"></RadzenButton>
                    </div>
                </div>

                <RadzenGrid @ref="grid" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="4"
                            AllowSorting="true" Data="@movies" TItem="Movies.Server.Data.MoviesDto" ColumnWidth="200px">
                    <Columns>
                        <RadzenGridColumn Width="30px" TItem="Movies.Server.Data.MoviesDto" Property="Id" Title="Id" />
                        <RadzenGridColumn Width="80px" TItem="Movies.Server.Data.MoviesDto" Property="PortraitUrl" Title="Portrait Url" Sortable="false" Filterable="false">
                            <Template Context="data">
                                <RadzenImage Path="@data?.PortraitUrl" style="width:115px; height:175px" />
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="Movies.Server.Data.MoviesDto" Property="Name" Title="Name" />
                        <RadzenGridColumn Width="50px" TItem="Movies.Server.Data.MoviesDto" Property="Year" Title="Year" />

                    </Columns>
                </RadzenGrid>

                @*
        <h3 style="margin-top: 2rem">DropDown with custom filtering</h3>
        <RadzenDropDown AllowClear="true" TValue="string"
                        LoadData=@LoadData AllowFiltering="true"
                        Data=@customCustomersData TextProperty="CompanyName" ValueProperty="CustomerID"
                        Change=@(args => OnChange(args, "DropDown with custom filtering")) />
        <h3 style="margin-top: 2rem">DropDown with placeholder</h3>
        <RadzenDropDown AllowClear="true" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true"
                        Placeholder="Select..." Data=@customers TextProperty="CompanyName" ValueProperty="CustomerID" Change=@(args => OnChange(args, "DropDown with placeholder")) />
        <h3 style="margin-top: 2rem">DropDown with template</h3>
        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@value Placeholder="Select..."
                        Data=@customers TextProperty="CompanyName" ValueProperty="CustomerID" Change=@(args => OnChange(args, "DropDown with placeholder")) Style="width:400px">
            <Template>
                Company: @((context as Customer).CompanyName)
            </Template>
        </RadzenDropDown>
        <h3 style="margin-top: 2rem">DropDown with multiple selection</h3>
        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        @bind-Value=@multipleValues Multiple="true" Placeholder="Select..." Data=@customers TextProperty="CompanyName" ValueProperty="CustomerID"
                        Change=@(args => OnChange(args, "DropDown with multiple selection")) Style="width:400px" />
        <h3 style="margin-top: 2rem">Bind DropDown Value to model property</h3>
        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@products @bind-Value=@myModel.MyValue
                        TextProperty="ProductName" ValueProperty="ProductID" Style="width:400px" Change=@(args => ChangeBound(args, "DropDown with bound Value")) />*@
            </div>
            @*<div class="col-xl-6">
                    <EventConsole @ref=@console />
                </div>*@
        </div>

    }
</div>

@code {

    [CascadingParameter] public IModalService Modal { get; set; }

    IEnumerable<Movies.Server.Data.MoviesDto> movies;
    //RadzenDataList<MoviesDto> moviesList;
    string searchString;
    RadzenGrid<MoviesDto> grid;

    protected override async Task OnInitializedAsync()
    {

        movies = await _moviesDataService.GetAll();
        movies = movies.OrderBy(n => n.Name);

    }

    async void Search()
    {
        movies = await _moviesDataService.GetByNameAsync(searchString);
        await grid.Reload();
        StateHasChanged();
    }


    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        //console.Log($"{name} value changed to {str}");
    }

}